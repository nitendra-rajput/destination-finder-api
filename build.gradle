buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE")
    }
}

plugins {
    id 'nebula.optional-base' version '3.0.3'
    id 'nebula.provided-base' version '3.0.3'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'nebula.provided-base'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'destination-finder-client'
    version = '0.1.0'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.RELEASE")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation("org.springframework.boot:spring-boot-starter-jetty")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.2.2.RELEASE'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    compileOnly 'org.projectlombok:lombok'
    compile 'commons-codec:commons-codec:1.15'
    compile 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootRun {
    jvmArgs = ["-Djasypt.encryptor.password=klm-tcs"]
}